x <- seq(from=0,to=1,by=0.1)
x
y <- seq(from=0,to=1,length=11)
y
z <- 1:10
z
rep(1,10)
x <- 1:3 ; y <- c(2,2,2)
x=y
x <- 1:3 ; y <- c(2,2,2)
x+y
x-y
x*y
x/y
x^y
z <- rep(2,5)
x+z
y-3
x <- 1:10
log(x)
exp(x)
sin(x)
cos(x)
tan(x)
abs(x)
sqrt(x)
sort(x)
length(x)
min(x)
max(x)
mean(x)
sum(x)
prod(x)
x <- 1:10 ; y <- rep(5,10)
z <- x<5
z
sum(z)
x<=5
x==5
x!=5
(x>5)&(y<2)
(x<5)|(y<2)
x <- c(1,2,3,NA,5)
is.na(x)
x <- -10:10
x[3]
x[1:3]
x[c(1,3,5)]
y <- x[x<0]
y
x[x<0] <- -x[x<0]
x[x<0]
y
x <- c(1,2,3,NA,5)
x[!is.na(x)]
x[is.na(x)] <- 4
x
fruit <- c(5,3,2)
names(fruit) <- c("apple","orange","peach")
fruit
fruit[c("apple","peach")]
y <- x[x<0]
y
x[x<0] <- x[x<0]
y <- x[x<0]
y
z <- array(1:20,dim=c(4,5))
z
A <- matrix(1:20,4,5)
B <- matrix(2,4,5)
z[3,4] ; A[3,4]
z[3,4]==A[3,4]
x <- c(1,2,3)
y <- c(4,5,6)
?matrix
A
B
cbind(x,y)
rbind(x,y)
cbind(B,1:4)
C <- cbind(A,B) ; C
A <- matrix(1:20,4,5) ; B <- matrix(1:20,4,5)
A+B
A-B
A*B
A/B
A <- matrix(runif(20),4,5)
A
B <- A%*%t(A)
B
solve(B)
?solve
Jeong <- list(first.name="Seok-Oh",age=42,married=T,no.children=2,child.ages=c(9,6))
Jeong
Jeong$age
Jeong$age[[1]]
Jeong$child.ages
Jeong[[5]][1]
Jeong[[1]]
x <- scan()
x
y <- scan()
y
?scan
x <- scan(file="C:/Users/student/Desktop/data_x/exam1.txt")
x <- scan(file="C:/Users/student/Desktop/data_x/exam1.txt")
y <- matrix(scan(file="C:/Users/student/Desktop/data_x/exam1.txt"),nrow=5,byrow=T)
x
y
x <- read.table(scan(file="C:/Users/student/Desktop/data_x/exam1.txt"),sep="")
x <- read.table("C:/Users/student/Desktop/data_x/exam1.txt",sep="",header=T)
x
y <- read.csv("C:/Users/student/Desktop/data_x/exam1.csv",header=T)
y
library("MASS")
data("geyser")
geyser
attach(geyser)
lm(duration~waiting)
plot(lm(duration~waiting))
res1 <- lm(duration~waiting)$residuals
qqnorm(res1) ; qqline(res1)
shapiro.test(res1)
data()
summary(lm(duration~waiting))
anova(lm(duration~waiting))
print(x)
x <- seq(from=0,to=1,by=0.01)
write.table(x,file="C:/Users/student/Desktop/data_x/output.txt")
x <- matrix(1:20,4,5)
write.table(x,file="C:/Users/student/Desktop/data_x/table.txt")
?write.table
write.table(x,file="C:/Users/student/Desktop/data_x/table.txt",row.names=F,col.names=F)
robust.reg <- function(x, y)
{
xx <- sort(x)
yy <- y[order(x)]
n <- length(x)
s <- NULL
for ( i in 1:(n-1) ) {
for ( j in (i+1):n ) {
s <- c(s, (yy[j]-yy[i])/(xx[j]-xx[i]))
}
}
beta <- median(s) # Sen estimate
z <- y - beta*x
w <- NULL
for ( i in 1:n ) {
for ( j in i:n ) {
w <- c(w, (z[i]+z[j])/2)
}
}
alpha <- median(w) # Hodges-Lehmann type estimate
return(c(alpha, beta))
}
robust.reg(waiting,duration)
beer <- c(3,4,1,1,3,4,3,3,1,3,2,1,2,1,2,3,2,3,1,1,1,1,4,3,1)
barplot(table(beer))
barplot(table(beer)/length(beer),col=c("lightblue","mistyrose","lightcyan","cornsilk"),names.arg=c("Domestic can","
"))
barplot(table(beer)/length(beer),col=c("lightblue","mistyrose","lightcyan","cornsilk"),names.arg=c("Domestic can","Domestic bottle","Microbrew","Import"),ylab="Relative frequency",main="Beer Preference Survey")
beer.counts <- table(beer)
beer.counts
pie(beer.counts)
names(beer.counts) <- c("Domestic can","Domestic bottle","Microbrew","Import")
pie(beer.counts)
beer.counts
scores <- c(2,3,16,23,14,12,4,13,2,0,0,0,6,28,31,14,4,8,2,5)
stem(scores)
x <- rnorm(1000)
hist(x,xlab="data")
hist(x,xlab="data",probability=T)
z <- seq(from=-3,to=3,by=0.01)
lines(z,dnorm(z),col=2,lwd=2)
growth <- c(75,72,73,61,67,64,62,63)
sugar <- c("C","C","C","F","F","F","S","S")
fly <- list(growth=growth,sugar=sugar)
boxplot(fly$growth)
jpeg(file="C:/Users/student/Desktop/data_x/flygrowth.jpg",width=480,height=360)
boxplot(fly$growth)
dev.off()
?jpeg
png(file="C:/Users/student/Desktop/data_x/flygrowth.jpg",width=480,height=360)
boxplot(fly$growth)
dev.off()
png(file="C:/Users/student/Desktop/data_x/flygrowth.png",width=480,height=360)
boxplot(fly$growth)
dev.off()
growth <- c(75,72,73,61,67,64,62,63)
sugar <- c("C","C","C","F","F","F","S","S")
fly <- data.frame(growth=growth,sugar=sugar)
boxplot(growth~sugar,xlab="Sugar Type",ylab="Growth",main="Growth against sugar types",data=fly)
data(cars)
cars
attach(cars)
plot(speed,dist,col="blue",pch="+",ylab="Distance taken to stop",xlab="Speed",ylim=c(-20,140))
lm(dist~speed)
res1 <- lm(dist~speed)$residuals
qqnorm(res1) ; qqline(res1)
shapiro.test(res1)
?abline
summary(lm(dist~speed))
plot(speed,dist,col="blue",pch="+",ylab="Distance taken to stop",xlab="Speed",ylim=c(-20,140))
abline(-17.5791,3.932,col="red")
title(main="Scatterplot with best fit line",font.main=4)
plot(speed,dist,col="blue",pch="+",ylab="Distance taken to stop",xlab="Speed",ylim=c(-20,140))
abline(-17.5791,3.9324,col="red")
title(main="Scatterplot with best fit line",font.main=4)
detach(cars)
data(iris)
View(iris)
attach(iris)
summary(iris)
pairs(iris[,1:4])
pairs(iris[Species=="virginica",1:4])
detach(iris)
library(hexbin)
install.packages("hexbin")
library(hexbin)
plot(hexbin(iris[,3],iris[,4]),xlab="Petal Length",ylab="Petal Width")
x <- 4
if (x<3) {print("x<3") ; z <- "M"} else {print("x>=3") ; z <- "F"}
z
x <- 1:10
n <- length(x)
y <- rep(0,n)
for (i in 1:n) {
y[i] <- x[i]^2
}
y
z <- x^2
z
print(cbind(y,z))
sum(1:45)
n <- 0
sum.so.far <- 0
while (sum.so.far <= 1000) {
n <- n+1
sum.so.far <- sum.so.far + n
}
print(c(n,sum.so.far))
A <- matrix(1:20,4,5)
A
apply(A,1,sum) ; apply(A,2,sum)
my.stat <- function(x) {
m <- mean(x) ; s <- sd(x)
res <- list(x=x,m=m,s=s)
par(mfrow=c(1,2))
boxplot(x,main="Boxplot")
hist(x,prob=T,col="lightgray",main="Histogram",xlab="data")
z <- seq(from=min(x),to=max(x),by=0.01)
lines(z,dnorm(z,mean=3,sd=1),col=2,lwd=3,lty=2)
return(res)
}
data.1 <- rnorm(1000,mean=3,sd=1)
my.stat(data.1)
install.packages("knitr")
library(knitr)
setwd("C:/Users/student/Desktop/Sung-yoon.R")
dat <- read.csv("C:/Users/student/Desktop/Sung-yoon.R/kospi_daily.csv",sep=",",header=T)
kospi <- dat$Close
plot(kospi,type="l",main="KOSPI",xlab="t",ylab="KOSPI")
setwd("C:/Users/student/Desktop/Sung-yoon.R/Lecture Note")
dat <- read.csv("C:/Users/student/Desktop/Sung-yoon.R/Lecture Note/kospi_daily.csv",sep=",",header=T)
kospi <- dat$Close
plot(kospi,type="l",main="KOSPI",xlab="t",ylab="KOSPI")
kospi.return <- diff(log(kospi))
plot(kospi.return,type="l",main="KOSPI returns",xlab="t",ylab="returns")
z <- scale(kospi.return) # standardization
skew.kospi <- mean(z^3) ; kurt.kospi <- mean(z^4)
print(c(mean(kospi.return),sd(kospi.return),skew.kospi,kurt.kospi))
hist(kospi.return,prob=T,nclass=50)
x <- seq(from=-0.06,to=0.04,by=0.0001)
lines(x,dnorm(x,mean=mean(kospi.return),sd=sd(kospi.return)),col=2)
par(mfrow=c(1,2))
acf(kospi.return) # lag : 시차 (이전날의 수익률이 오늘의 수익률과 관련이 거의 없음.)
acf(abs(kospi.return))
install.packages("fBasics")
library(fBasics)
?nigFit
?hypFit
?nigFit
nigFit(kospi.return)
dat.2 <- read.csv("C:/Users/hufs/Desktop/Sung-yoon.R/Assignment (Due to 3.26)/Volkswagen AG/Volkswagen_daily.csv",sep=",",header=T)
volkswagen <- dat.2$Close
par(mfrow=c(1,2))
plot(volkswagen,type="l",main="Volkswagen AG",xlab="t",ylab="Volkswagen")
volkswagen.return <- diff(log(volkswagen))
plot(volkswagen.return,type="l",main="Volkswagen returns",xlab="t",ylab="returns")
?qnig
hist(kospi.return,prob=T,nclass=50)
x <- seq(from=-0.06,to=0.04,by=0.0001)
lines(x,dnorm(x,mean=mean(kospi.return),sd=sd(kospi.return)),col=2)
lines(x,dnig(86.002807860,-8.518704925,0.010703793,0.001191761),col=3)
par(mfrow=c(1,1))
hist(kospi.return,prob=T,nclass=50)
x <- seq(from=-0.06,to=0.04,by=0.0001)
lines(x,dnorm(x,mean=mean(kospi.return),sd=sd(kospi.return)),col=2)
lines(x,dnig(x,86.002807860,-8.518704925,0.010703793,0.001191761),col=3)
dat.2 <- read.csv("C:/Users/student/Desktop/Sung-yoon.R/Mid-term Exam/Volkswagen AG/Volkswagen_daily.csv",sep=",",header=T)
volkswagen <- dat.2$Close
par(mfrow=c(1,2))
plot(volkswagen,type="l",main="Volkswagen AG",xlab="t",ylab="Volkswagen")
volkswagen.return <- diff(log(volkswagen))
plot(volkswagen.return,type="l",main="Volkswagen returns",xlab="t",ylab="returns")
z <- scale(volkswagen.return)
skew.volkswagen <- mean(z^3) ; kurt.volkswagen <- mean(z^4)
print(c(mean(volkswagen.return),sd(volkswagen.return),skew.volkswagen,kurt.volkswagen))
nigFit(volkswagen.return)
par(mfrow=c(1,1))
nigFit(volkswagen.return)
hist(volkswagen.return,prob=T,nclass=50)
x <- seq(from=-0.05,to=0.10,by=0.0001)
lines(x,dnorm(x,mean=mean(volkswagen.return),sd(volkswagen.return)),col=2)
lines(x,dnig(x,54.590760471,-0.999513539,0.024762730,0.001388792),col=3)
dat <- read.csv("C:/Users/student/Desktop/Sung-yoon.R/Lecture Note/kospi_daily.csv",sep=",",header=T)
kospi <- dat$Close
kospi.return <- diff(log(kospi))
nig.volatility <- function(alpha,beta,delta,mu) {
gamma <- sqrt(alpha^2-beta^2)
ans <- sqrt(delta*alpha^2/gamma^3)
return(ans)
}
nig.volatility(86.002807860,-8.518704925,0.010703793,0.001191761)
sd(kospi.return)
qnig(0.01,86.002807860,-8.518704925,0.010703793,0.001191761)
qnig(0.005,86.002807860,-8.518704925,0.010703793,0.001191761)
qnig(0.05,86.002807860,-8.518704925,0.010703793,0.001191761)
nigFit(kospi.return)
qnig(0.05,86.002807860,-8.518704925,0.010703793,0.001191761)
qnorm(0,05,mean=mean(kospi.return),sd=sd(kospi.return))
qnig(0.01,86.002807860,-8.518704925,0.010703793,0.001191761)
qnorm(0,01,mean=mean(kospi.return),sd=sd(kospi.return))
qnig(0.005,86.002807860,-8.518704925,0.010703793,0.001191761)
qnorm(0,005,mean=mean(kospi.return),sd=sd(kospi.return))
z <- scale(kospi.return) # standardization
skew.kospi <- mean(z^3) ; kurt.kospi <- mean(z^4)
print(c(mean(kospi.return),sd(kospi.return),skew.kospi,kurt.kospi))
nigFit(kospi.return)
qnig(0.01,86.002807860,-8.518704925,0.010703793,0.001191761)
qnorm(0,01,mean=0.0001262907,sd=0.0112672356)
dat.2 <- read.csv("C:/Users/student/Desktop/Sung-yoon.R/Mid-term Exam/Volkswagen AG/Volkswagen_daily.csv",sep=",",header=T)
volkswagen <- dat.2$Close
volkswagen.return <- diff(log(volkswagen))
par(mfrow=c(1,1))
nigFit(volkswagen.return)
